// 1. 상세한 개념
// 객체(Object)는 자바스크립트에서 데이터를 표현하는 복합 자료형 중 하나로, 키와 값의 쌍으로 구성된 프로퍼티들을 저장합니다.
// 객체는 다양한 타입의 데이터를 담을 수 있으며, 함수도 포함할 수 있습니다(이러한 함수를 메서드라고 합니다).
// 객체는 레퍼런스 타입으로, 변수에 할당될 때 메모리 상의 주소가 할당되므로, 변수가 객체 자체가 아닌 참조를 저장합니다.

// 2. 개념을 충분히 이해할 수 있는 코드
// 객체 생성 예제:
const person = {
    name: "John",
    age: 30,
    greet: function() {
      console.log(`Hello, my name is ${this.name}`);
    }
  };
  
  // 객체 프로퍼티에 접근하는 방법:
  console.log(person.name); // "John"
  console.log(person['age']); // 30
  
  // 객체의 메서드 호출:
  person.greet(); // "Hello, my name is John"
  
  // 3. 개발자들이 많이 실수하는 부분
  // - 레퍼런스 타입의 이해 부족: 객체는 레퍼런스 타입이므로, 변수에 객체를 할당하면 참조가 복사됩니다. 따라서 한 변수에서 객체를 수정하면 다른 변수에서도 변경이 반영됩니다.
  // - 프로퍼티 접근 방식의 혼용: 객체의 프로퍼티에 접근할 때 '.' 표기법과 '[]' 표기법이 있으며, 상황에 따라 적절한 방식을 선택해야 합니다.
  // - `this` 키워드의 오용: 객체의 메서드에서 `this` 키워드를 사용하면 객체 자신을 참조합니다. 그러나 `this`의 값은 호출 방식에 따라 변경될 수 있으므로 주의가 필요합니다.
  
  