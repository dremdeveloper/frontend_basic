// 1. 상세한 개념
// - "객체 리터럴"은 중괄호({})를 사용하여 객체를 직접 작성하는 방법을 의미합니다.
// - 키-값 쌍으로 속성을 정의할 수 있으며, 메서드 또한 정의할 수 있습니다.
// - 객체 리터럴을 사용하면, 손쉽게 객체를 생성하고 초기화할 수 있습니다.

// 2. 개념을 충분히 이해할수 있는 코드
const person = {
    name: 'Alice',
    age: 30,
    greet: function() {
        console.log('Hello, ' + this.name);
    }
};

person.greet(); // 출력: Hello, Alice

// 3. 개발자들이 많이 실수하는 부분 
// - 'this' 키워드의 사용: 객체 리터럴 내부의 함수에서 'this' 키워드를 사용할 때, 
//   'this'가 어떤 객체를 참조할지를 혼동하기 쉽습니다.
// - 속성 이름 충돌: 같은 이름의 속성을 여러 번 정의하면, 마지막에 정의한 속성 값만 유지되며 이전 값은 덮어쓰기 됩니다.
// - 프로토타입 체인: 객체 리터럴은 Object.prototype을 상속받기 때문에, 
//   Object.prototype에 정의된 메서드도 사용할 수 있다는 사실을 간과하기 쉽습니다.
