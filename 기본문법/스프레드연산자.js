// 1. 상세한 개념
// '...' 연산자는 Rest 연산자 또는 Spread 연산자로 사용됩니다.
// - Rest 연산자: 함수의 파라미터에서 사용되어 남아 있는 모든 인수를 배열로 수집합니다.
// - Spread 연산자: 배열이나 객체를 개별 요소로 펼쳐 새로운 배열이나 객체를 생성할 때 사용됩니다.

// 2. 개념을 충분히 이해할 수 있는 코드
// Rest 연산자 예제:
function sum(...args) {
    return args.reduce((acc, curr) => acc + curr, 0);
  }
  
  console.log(sum(1, 2, 3, 4, 5)); // 15
  
  // Spread 연산자 예제:
  const arr1 = [1, 2, 3];
  const arr2 = [...arr1, 4, 5, 6];
  
  console.log(arr2); // [1, 2, 3, 4, 5, 6]
  
  const obj1 = { a: 1, b: 2 };
  const obj2 = { ...obj1, c: 3 };
  
  console.log(obj2); // { a: 1, b: 2, c: 3 }
  
  // 3. 개발자들이 많이 실수하는 부분 
  // - 깊은 복사와 얕은 복사의 혼동: 배열이나 객체를 Spread 연산자로 복사할 때, 얕은 복사가 수행된다는 것을 인지하지 못하는 경우가 많습니다. 중첩된 객체나 배열을 복사하면 문제가 발생할 수 있습니다.
  // - Rest 연산자의 위치: Rest 연산자는 함수 파라미터에서만 마지막에 사용할 수 있습니다. 그 외의 위치에서 사용하면 문법 오류가 발생합니다.
  // - 잘못된 사용: Spread 연산자를 함수 호출에서 인수로 사용하면서, 함수가 기대하는 인수의 개수와 일치하지 않게 사용하는 실수를 범할 수 있습니다.
  
  